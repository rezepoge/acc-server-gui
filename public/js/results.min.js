"use strict";(()=>{const i=Array.from(document.getElementsByClassName("result")),t=document.getElementById("timetable");function e(i,t){return i.filter(i=>i.carId===t)}function s(i,t,e){return i===e?"bestLapAll":i===t?"bestLap":""}function a(i){if(!i||"number"!=typeof i)return"--:--.---";const t=(i=parseInt(i))%1e3,e=(i-t)/1e3%60;return`${n(((i-t)/1e3-e)/60%60,2)}:${n(e,2)}.${n(t,3)}`}function n(i,t){const e="0".repeat(t-1)+i;return e.substr(e.length-t)}i.forEach((n,l)=>{n.addEventListener("click",r=>(function(n,l,r){l.classList.add("active"),i.forEach(i=>{l!==i&&i.classList.remove("active")});let d='<div class="timeTableLine_header">\n        <div class="driver">\n            Driver\n        </div>\n        <div class="car">\n            Car\n        </div>\n        <div class="timing">\n            <div>Best</div>\n            <div>Last</div>\n            <div>Avg</div>\n            <div>Total</div>\n        </div>\n    </div>';const c=results[r];c.sessionResult.leaderBoardLines.forEach((i,t)=>{const s=e(c.laps,i.car.carId),n=function(i){if(!i.length)return null;i[0].isValidForBest=!1;const t=i.filter(i=>i.isValidForBest).map(i=>i.laptime);if(!t.length)return null;const e=t.reduce((i,t)=>i+t,0)/t.length;return Math.round(e)}(s);d+=`<div class="timeTableLine${i.timing.totalTime<=i.timing.bestLap?" noValidLap":""}" data-carId="${i.car.carId}" data-position="${t}">\n                <div class="driver">\n                    <div class="position">${t+1}</div>\n                    <div class="shortName" title="${i.currentDriver.firstName} ${i.currentDriver.lastName}">${i.currentDriver.shortName}</div>\n                </div>\n                <div class="car">\n                    <div class="raceNumber">${i.car.raceNumber}</div>\n                    <div class="carModel">${basics.cars.find(t=>t.id===i.car.carModel).name}</div>\n                </div>\n                <div class="timing">\n                    <div class="${0===t?" bestLapAll":"bestLap"}" title="Best laptime">${a(i.timing.bestLap)}</div>\n                    <div class="lastLap${i.timing.bestLap===i.timing.lastLap?" bestLap":""}" title="Last laptime">${a(i.timing.lastLap)}</div>\n                    <div class="avgLap" title="Average laptime">${a(n)}</div>\n                    <div class="totalTime" title="Total time">${a(i.timing.totalTime)}</div>\n                </div>\n            </div>`}),t.innerHTML=d.trim(),Array.from(t.querySelectorAll(".timeTableLine:not(.noValidLap)")).forEach(i=>i.addEventListener("click",n=>(function(i,t,n,l){const r=parseInt(t.getAttribute("data-carId")),d=parseInt(t.getAttribute("data-position")),c=document.querySelector(`#laps_${r}.laps`);if(c)return void c.remove();const v=document.createElement("div");v.className="laps",v.id="laps_"+r;let o='<div class="lapTableLine_header">\n        <div>\n            Lap\n        </div>\n        <div>\n            Laptime\n        </div>\n        <div class="splits">\n            <div>S1</div>\n            <div>S2</div>\n            <div>S3</div>\n        </div>\n    </div>';const m=results[n],p=e(m.laps,r),u=m.sessionResult.leaderBoardLines[d].timing.bestLap,L=($=m.laps,Math.min(...$.filter(i=>i.isValidForBest).map(i=>i.laptime))),f=function(i,t){const e=Math.min(...i.filter(i=>i.isValidForBest).map(i=>i.splits[0])),s=Math.min(...t.filter(i=>i.isValidForBest).map(i=>i.splits[0])),a=Math.min(...i.filter(i=>i.isValidForBest).map(i=>i.splits[1])),n=Math.min(...t.filter(i=>i.isValidForBest).map(i=>i.splits[1])),l=Math.min(...i.filter(i=>i.isValidForBest).map(i=>i.splits[2])),r=Math.min(...t.filter(i=>i.isValidForBest).map(i=>i.splits[2]));return[{own:e,all:s},{own:a,all:n},{own:l,all:r}]}(p,m.laps);var $;p.forEach((i,t)=>{const e=s(i.laptime,u,L),n=s(i.splits[0],f[0].own,f[0].all),l=s(i.splits[1],f[1].own,f[1].all),r=s(i.splits[2],f[2].own,f[2].all);o+=`<div class="lapTableLine${i.isValidForBest?"":" noValidLap"}">\n                <div class="lap">${t+1}</div>\n                <div class="laptime ${e}">${a(i.laptime)}</div>\n                <div class="splits">\n                    <div class="laptime ${n}">${a(i.splits[0])}</div>\n                    <div class="laptime ${l}">${a(i.splits[1])}</div>\n                    <div class="laptime ${r}">${a(i.splits[2])}</div>\n                </div>\n            </div>`}),v.innerHTML=o.trim(),l.insertBefore(v,t.nextElementSibling)})(0,i,r,t))),t.scrollIntoView({behavior:"smooth"})})(0,n,l))})})();